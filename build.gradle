// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url "https://jitpack.io" }
        maven {
            url = "http://jfrog.cloud.qiyi.domain:80/iqiyi-maven-ott"
        }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.gala.video.apkanalyzer:analyzer:0.0.0.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin:'com.gala.video.plugin.apkanalyzer'

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url "https://jitpack.io" }
        google()
        jcenter()
    }
}
/*

project.subprojects { sub ->
    sub.beforeEvaluate {
        println("****** subProject >> project beforeEvaluate")
    }
    sub.afterEvaluate {
        println("****** subProject >> project afterEvaluate")
    }
}

gradle.beforeProject {
    println("****** gradle >> beforeProject")
}

gradle.afterProject {
    println("****** gradle >> afterProject")
}

gradle.projectsEvaluated {
    println("****** gradle >> projectsEvaluated")
}


gradle.taskGraph.whenReady {
    println("****** gradle.taskGraph >> whenReady")
}

gradle.taskGraph.beforeTask {
    println("****** gradle.taskGraph >> beforeTask")
}

gradle.taskGraph.afterTask {
    println("****** gradle.taskGraph >> afterTask")
}

gradle.beforeSettings {
    println("****** gradle >> beforeSettings")
}

gradle.buildStarted {
    println("****** gradle >> buildStarted")
}

gradle.buildFinished {
    println("****** gradle >> buildFinished")
}
*/
